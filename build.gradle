buildscript {
    ext.kotlin_version = '1.4.20'
    repositories {
        mavenCentral()
    }
}
plugins {
    id 'com.github.johnrengelman.shadow' version '6.1.0'
    id "io.freefair.lombok" version "5.0.0-rc4"
    id 'org.jetbrains.kotlin.jvm' version "$kotlin_version"
}
apply plugin: 'kotlin'

allprojects {

    apply plugin: 'com.github.johnrengelman.shadow'
    apply plugin: 'java'
    apply plugin: 'maven-publish'
    apply plugin: 'io.freefair.lombok'
    apply plugin: 'kotlin'
    apply plugin: 'org.jetbrains.kotlin.jvm'

    ext.lightchat = "4dc2677"
    ext.isBetaLight = true
    ext.log4j_ver = "2.14.0"


    group = 'com.github.Fernthedev'
    version = '2.0.0'

    repositories {
        mavenCentral()
        jcenter()
        maven { url 'https://jitpack.io' }
        mavenLocal()
    }

    dependencies {
        implementation 'org.slf4j:slf4j-api:1.7.30'
        implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
        implementation 'com.github.Fernthedev:FernUtils:1.4.0'
        implementation 'com.google.code.gson:gson:2.8.6'

        implementation group: 'com.jcraft', name: 'jzlib', version: '1.1.3'
        implementation group: 'org.lz4', name: 'lz4-java', version: '1.7.1'
//        implementation group: 'org.slf4j', name: 'log4j-over-slf4j', version: '1.7.30'

    }

    repositories {
        mavenLocal()
        maven {
            url = 'http://repo.maven.apache.org/maven2'
        }

        maven {
            url = 'https://oss.sonatype.org/content/repositories/snapshots'
        }
    }

    targetCompatibility = sourceCompatibility = '1.8'

    publishing {
        publications {
            maven(MavenPublication) {
                from(components.java)
            }
        }
    }

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }


    jar.dependsOn(shadowJar)
    jar.getArchiveClassifier().set('old')
//    jar.classifier = 'old'
    shadowJar {
        transform(com.github.jengelman.gradle.plugins.shadow.transformers.Log4j2PluginsCacheFileTransformer)
        minimize() {

            // TODO: Figure out how to be specific with dependencies here

//            exclude (dependency("${group}:server") )
//            exclude (project(":server") )

            exclude (dependency('io.netty:netty-transport.*:.*') )
//            exclude (dependency('log4j:log4j:.*') )
            exclude (dependency('org.apache.logging.log4j:log4j-core'))
            exclude (dependency('org.apache.logging.log4j:log4j-slf4j-impl'))

            exclude (dependency('org.apache.logging.log4j:') )
            exclude (dependency('org.apache.commons:'))

            exclude (dependency('org.slf4j:.*:.*') )
            exclude (dependency('commons-logging:.*:.*') )
            exclude (dependency('org.fusesource.jansi:.*:.*') )
            exclude (dependency('org.jline:.*:.*') )
            exclude (dependency('commons-logging:.*:.*') )
            exclude (dependency('net.minecrell:.*:.*') )
            exclude (dependency('com.jcraft:jzlib'))
            exclude (dependency('org.lz4:lz4-java'))
            exclude ('.**/Log4j2Plugins.dat' )
        }
        mergeServiceFiles()
        getArchiveClassifier().set('')
    }

    configurations.all {
        resolutionStrategy {
            preferProjectModules()
        }
    }

    sourceSets {
        main.kotlin.srcDirs += 'src/main/java'
        main.java.srcDirs += 'src/main/kotlin'
    }

    compileKotlin {
        kotlinOptions {
            jvmTarget = "1.8"
        }
    }
}
repositories {
    mavenCentral()
}
dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
