//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: packets.proto

package com.github.fernthedev.packets.proto;

@kotlin.jvm.JvmName("-initializecolor")
public inline fun color(block: com.github.fernthedev.packets.proto.ColorKt.Dsl.() -> kotlin.Unit): com.github.fernthedev.packets.proto.Packets.Color =
  com.github.fernthedev.packets.proto.ColorKt.Dsl._create(com.github.fernthedev.packets.proto.Packets.Color.newBuilder()).apply { block() }._build()
public object ColorKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.github.fernthedev.packets.proto.Packets.Color.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.github.fernthedev.packets.proto.Packets.Color.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.github.fernthedev.packets.proto.Packets.Color = _builder.build()

    /**
     * <code>uint32 r = 1;</code>
     */
    public var r: kotlin.Int
      @JvmName("getR")
      get() = _builder.getR()
      @JvmName("setR")
      set(value) {
        _builder.setR(value)
      }
    /**
     * <code>uint32 r = 1;</code>
     */
    public fun clearR() {
      _builder.clearR()
    }

    /**
     * <code>uint32 g = 2;</code>
     */
    public var g: kotlin.Int
      @JvmName("getG")
      get() = _builder.getG()
      @JvmName("setG")
      set(value) {
        _builder.setG(value)
      }
    /**
     * <code>uint32 g = 2;</code>
     */
    public fun clearG() {
      _builder.clearG()
    }

    /**
     * <code>uint32 b = 3;</code>
     */
    public var b: kotlin.Int
      @JvmName("getB")
      get() = _builder.getB()
      @JvmName("setB")
      set(value) {
        _builder.setB(value)
      }
    /**
     * <code>uint32 b = 3;</code>
     */
    public fun clearB() {
      _builder.clearB()
    }

    /**
     * <code>uint32 a = 4;</code>
     */
    public var a: kotlin.Int
      @JvmName("getA")
      get() = _builder.getA()
      @JvmName("setA")
      set(value) {
        _builder.setA(value)
      }
    /**
     * <code>uint32 a = 4;</code>
     */
    public fun clearA() {
      _builder.clearA()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.github.fernthedev.packets.proto.Packets.Color.copy(block: com.github.fernthedev.packets.proto.ColorKt.Dsl.() -> kotlin.Unit): com.github.fernthedev.packets.proto.Packets.Color =
  com.github.fernthedev.packets.proto.ColorKt.Dsl._create(this.toBuilder()).apply { block() }._build()

