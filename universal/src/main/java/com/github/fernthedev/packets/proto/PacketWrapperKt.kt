//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: packets.proto

package com.github.fernthedev.packets.proto;

@kotlin.jvm.JvmName("-initializepacketWrapper")
public inline fun packetWrapper(block: com.github.fernthedev.packets.proto.PacketWrapperKt.Dsl.() -> kotlin.Unit): com.github.fernthedev.packets.proto.Packets.PacketWrapper =
  com.github.fernthedev.packets.proto.PacketWrapperKt.Dsl._create(com.github.fernthedev.packets.proto.Packets.PacketWrapper.newBuilder()).apply { block() }._build()
public object PacketWrapperKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: com.github.fernthedev.packets.proto.Packets.PacketWrapper.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.github.fernthedev.packets.proto.Packets.PacketWrapper.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.github.fernthedev.packets.proto.Packets.PacketWrapper = _builder.build()

    /**
     * <code>.com.github.fernthedev.packets.proto.SendObjectsListPacket sendObjectsListPacket = 1;</code>
     */
    public var sendObjectsListPacket: com.github.fernthedev.packets.proto.Packets.SendObjectsListPacket
      @JvmName("getSendObjectsListPacket")
      get() = _builder.getSendObjectsListPacket()
      @JvmName("setSendObjectsListPacket")
      set(value) {
        _builder.setSendObjectsListPacket(value)
      }
    /**
     * <code>.com.github.fernthedev.packets.proto.SendObjectsListPacket sendObjectsListPacket = 1;</code>
     */
    public fun clearSendObjectsListPacket() {
      _builder.clearSendObjectsListPacket()
    }
    /**
     * <code>.com.github.fernthedev.packets.proto.SendObjectsListPacket sendObjectsListPacket = 1;</code>
     * @return Whether the sendObjectsListPacket field is set.
     */
    public fun hasSendObjectsListPacket(): kotlin.Boolean {
      return _builder.hasSendObjectsListPacket()
    }

    /**
     * <code>.com.github.fernthedev.packets.proto.ClientWorldUpdatePacket clientWorldUpdatePacket = 2;</code>
     */
    public var clientWorldUpdatePacket: com.github.fernthedev.packets.proto.Packets.ClientWorldUpdatePacket
      @JvmName("getClientWorldUpdatePacket")
      get() = _builder.getClientWorldUpdatePacket()
      @JvmName("setClientWorldUpdatePacket")
      set(value) {
        _builder.setClientWorldUpdatePacket(value)
      }
    /**
     * <code>.com.github.fernthedev.packets.proto.ClientWorldUpdatePacket clientWorldUpdatePacket = 2;</code>
     */
    public fun clearClientWorldUpdatePacket() {
      _builder.clearClientWorldUpdatePacket()
    }
    /**
     * <code>.com.github.fernthedev.packets.proto.ClientWorldUpdatePacket clientWorldUpdatePacket = 2;</code>
     * @return Whether the clientWorldUpdatePacket field is set.
     */
    public fun hasClientWorldUpdatePacket(): kotlin.Boolean {
      return _builder.hasClientWorldUpdatePacket()
    }
    public val packetCase: com.github.fernthedev.packets.proto.Packets.PacketWrapper.PacketCase
      @JvmName("getPacketCase")
      get() = _builder.getPacketCase()

    public fun clearPacket() {
      _builder.clearPacket()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun com.github.fernthedev.packets.proto.Packets.PacketWrapper.copy(block: com.github.fernthedev.packets.proto.PacketWrapperKt.Dsl.() -> kotlin.Unit): com.github.fernthedev.packets.proto.Packets.PacketWrapper =
  com.github.fernthedev.packets.proto.PacketWrapperKt.Dsl._create(this.toBuilder()).apply { block() }._build()

val com.github.fernthedev.packets.proto.Packets.PacketWrapperOrBuilder.sendObjectsListPacketOrNull: com.github.fernthedev.packets.proto.Packets.SendObjectsListPacket?
  get() = if (hasSendObjectsListPacket()) getSendObjectsListPacket() else null

val com.github.fernthedev.packets.proto.Packets.PacketWrapperOrBuilder.clientWorldUpdatePacketOrNull: com.github.fernthedev.packets.proto.Packets.ClientWorldUpdatePacket?
  get() = if (hasClientWorldUpdatePacket()) getClientWorldUpdatePacket() else null

